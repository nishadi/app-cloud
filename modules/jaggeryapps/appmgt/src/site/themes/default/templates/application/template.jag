<%
/*
 * Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include("/jagg/constants.jag");
include("/jagg/jagg.jag");

jagg.template("application", function (inputs, outputs, jagg) {
        var runtimes = outputs.runtimes;
        var appType = outputs.appType;
        var appTypeName = appType.type;
        var isAppTypeBuildable = appType.buildable;
        var applicationName = outputs.applicationName;
        var encodedLabels = request.getParameter("encodedLabels");
        var encodedEnvs = request.getParameter("encodedEnvs");
        var log = new Log();
        var decodedLabels = parse(decodeURIComponent(encodedLabels, "UTF-8"));
        var decodedEnvs = parse(decodeURIComponent(encodedEnvs, "UTF-8"));
        var newVersion = request.getParameter("newVersion");
        var nextVersion = request.getParameter("nextVersion");

    %>

<link rel="stylesheet" href="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('css/bootstrap-3.2.0/bootstrap.min.css'))%>">
      <link rel="stylesheet" href="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('css/font-wso2-1.0.0/css/font-wso2.css'))%>">
      <link rel="stylesheet" href="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('css/font-awesome-4.2.0/font-awesome.min.css'))%>">
      <link rel="stylesheet" href="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('css/web-fonts/Roboto.css'))%>">
      <link rel="stylesheet" href="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('css/styles.css'))%>">

 <script type="text/javascript">
    var appTypeName = "<%=appType.type%>";
    const APP_TYPE_EXTENSION = "<%=appType.extension%>";
    var applicationName = "<%=applicationName%>";
    var retryCount = 0;
    var iconErrorMsg = "Invalid Image";                // used to hold the validation error message of the app icon
    var artifactErrorMsg = "Invalid Artifact";
    var contentInvalidErrorMsg = "";
    var validationFailErrorMsg = "";
    var uploadMethod = "file";
    var urlUploadComplete = false;
    var applicationHashId;
    $(document).ready(function(){

            $("#runtime").select2();
            //check if application name available
            if (applicationName != "null") {
                $("#applicationName").val(applicationName);
                $("#applicationName").prop("disabled", true);
            }
            // add existing envs
            var prevEnvs =jQuery.parseJSON('<%=decodedEnvs%>');
            if(prevEnvs){
                // add existing env variables
                for(x=0; x<prevEnvs.length; x++){
                   var envVar = prevEnvs[x];
                    drawEnvTagPane($("#env-pane"), envVar.propertyName, envVar.propertyValue);
                }
            }

            // add existing labels
            var prevLabels =jQuery.parseJSON('<%=decodedLabels%>');
            if(prevLabels){
                for(x=0; x<prevLabels.length; x++){
                    var label = prevLabels[x];
                    drawEnvTagPane($("#tags-pane"), label.labelName, label.labelValue);
                }
            }
            activateUploadButton();
            $("#url-upload-block").hide();
            $("#github-block").hide();

            $.each(<%=runtimes%>,function(key,value){
                $("#runtime").append($('<option></option>').val(value.id).html(value.runtimeName));
                $("#runtime").trigger('change');
            });

            var max_fields      = 10; //maximum input boxes allowed
            var wrapper         = $(".input_fields_wrap"); //Fields wrapper
            var add_button      = $(".add_field_button"); //Add button ID

            var x = 1; //initial text box count
            $(add_button).click(function(e){ //on add input button click
                e.preventDefault();
                if(x < max_fields){ //max input box allowed
                    x++; //text box increment
                    $(wrapper).append('<div class="runtime_property"> <input type="text" class="form-control" name="key">' +
                     '<input type="text" class="form-control" name="value">' +
                     '<a href="#" class="remove_field">Remove</a>' +
                     '</div>'); //add input box
                }
            });

            $(wrapper).on("click",".remove_field", function(e){ //user click on remove text
                e.preventDefault(); $(this).parent('div').remove(); x--;
            });

            var modalBody = '<div class="container-fluid">'+
                                '<div class="row">'+
                                    '<div id="progress_table" class="col-xs-12 col-md-12 section-title">' +
                                        '<i class="fa fa-2x fa-circle-o-notch fa-spin"></i>' +
                                    '</div>' +
                                '</div>' +
                            '</div>';


            $('#application-details').submit(function(e){

                $("#app-creation-model-footer").html("");
                $("#app-creation-model-body").html(modalBody);


                 jagg.post("../blocks/application/application.jag", {
                    action:"generateApplicationHashId",
                    applicationName:$("#applicationName").val()
                },function (result) {
                    applicationHashId = result;
                    executeAsync(drawProgressWindow());
                },function (jqXHR, textStatus, errorThrown) {
                    jagg.message({content: "Error occurred while generating application key.", type: 'error', id:'view_log'});
                });

                $('#add-application').loadingButton({action:'show'});
                e.preventDefault();
                var runtimeProperties = getProperties("env-pane");
                var tags = getProperties("tags-pane");
                var formData = new FormData($(this)[0]);
                formData.append('runtimeProperties', JSON.stringify(runtimeProperties));
                formData.append('action', 'createApplication');
                formData.append('isNewVersion', '<%=newVersion%>');
                formData.append('appTypeName', appTypeName);
                formData.append('applicationName', $("#applicationName").val());
                var optionRuntime = $("#runtime option:selected").val();
                formData.append('runtime', optionRuntime);

                if(uploadMethod === "file"){
                    formData.append('uploadedFileName', $("#uploadedFileName").val());
                } else if (uploadMethod === "url" ) {
                    if (appTypeName == "war") {
                        formData.append('uploadedFileName', "VERSION_HASH_ID.war");
                    } else if (appTypeName == "mss") {
                        formData.append('uploadedFileName', "VERSION_HASH_ID.jar");
                    } else if (appTypeName == "php") {
                        formData.append('uploadedFileName', "VERSION_HASH_ID.zip");
                    }
                } else if (uploadMethod === "github" ) {
                    formData.append('gitRepoUrl', $("#gitRepoUrl").val());
                    formData.append('gitRepoBranch', $("#gitRepoBranch").val());
                    if($("#projectRoot").val()){
                        formData.append('projectRoot', $("#projectRoot").val());
                    }else{
                        formData.append('projectRoot', "/");
                    }
                    formData.append('token', $("#token").val());

                    // Add github url as a tag
                    if ('<%=newVersion%>' == 'null') {
                        var property = {};
                        property["key"] = "gitRepoUrl";
                        property["value"] = $("#gitRepoUrl").val();
                        tags.push(property);
                    }
                }
                formData.append('tags', JSON.stringify(tags));
                $.ajax({
                        url: $(this).attr("action"),
                        type: 'POST',
                        data: formData,
                        async: true,
                        success: function (data) {
                        },
                        cache: false,
                        contentType: false,
                        processData: false
                    });

                return false;
            });

            $('#fileupload').fileupload({
                submit: function(e, data) {
                    $('#uploadedFileName').focus();
                    data.url = "<%=jagg.getAbsoluteUrl('/site/blocks/application/application.jag') %>",
                        data.dataType = 'json',
                        data.formData = {
                            action: 'uploadExistingArchive',
                            appTypeName: appTypeName,
                            applicationName: $("#applicationName").val(),
                            applicationRevision: $("#applicationRevision").val()
                        }
                },
                progressall: function(e, data) {
                    //First parameters is percentage, second parameter is decimal radix
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('#progress .progress-bar').css(
                        'width',
                        progress + '%'
                    );
                    if (progress == 100) {
                        activateCreateApplication();
                    }
                },
                change: function(e, data) {
                    $.each(data.files, function(index, file) {
                        $("#uploadedFileName").val(file.name);
                    });
                    $('#progress .progress-bar').replaceWith("<div class=\"progress-bar progress-bar-success\" style=\"width: 0%;\"></div>");
                }
            });

        function drawProgressWindow(){
            $('#app_creation_progress_modal').modal({ backdrop: 'static', keyboard: false});
            $("#app_creation_progress_modal").show();
            setInterval(pollEvents, 2000);
        }

        function executeAsync(func) {
            setTimeout(func, 0);
        }

        function pollEvents() {

            jagg.post("../blocks/application/application.jag", {
                action:"getApplicationCreationEvents",
                applicationName:$("#applicationName").val(),
                applicationRevision:$("#applicationRevision").val(),

            },function (result) {
                $("#progress_table").html("");
                var result = jQuery.parseJSON(result);
                var table = "<table class='table' style='width:100%; color:black'>" ;
                for(var i = 0; i < result.length; i++){
                    var statusStyle;
                    var event = result[i];

                    if(event.status == "success"){
                        statusStyle = "success";
                        if (event.name === "Status") {
                                table = table + "<tr class='" + statusStyle + "'><td>Container Status</td>" +
                                                "<td>"+event.description+"</td>" +
                                                "<td><i class=\"fa fa-check\"></i></td></tr>";
                        } else {
                                table = table + "<tr class='" + statusStyle + "'><td>" + event.name + "</td>" +
                                                "<td></td>" +
                                                "<td><i class=\"fa fa-check\"></i></td></tr>";
                        }
                    } else if (event.status == "failed") {
                        statusStyle = "danger";
                        if (event.name === "Status") {
                                table = table + "<tr class='" + statusStyle + "'><td>Container Status</td>" +
                                                "<td>"+event.description+"</td>" +
                                                "<td><i class=\"fa fa-times\"></i></td></tr>";
                        } else {
                                table = table + "<tr class='" + statusStyle + "'><td>" + event.name + "</td>" +
                                                "<td></td>" +
                                                "<td><i class=\"fa fa-times\"></i></td></tr>";
                        }
                    } else if (event.status == "pending"){
                        if (event.name === "Status") {
                            statusStyle = "active";
                                table = table + "<tr class='" + statusStyle + "'><td>Container Status</td>" +
                                                "<td>"+event.description+"</td>" +
                                                "<td><i class=\"fa fa-circle-o-notch fa-spin\"></i></td></tr>";
                        } else {
                            statusStyle = "active";
                                table = table + "<tr class='" + statusStyle + "'><td>" + event.name + "</td>" +
                                                "<td></td>" +
                                                "<td><i class=\"fa fa-circle-o-notch fa-spin\"></i></td></tr>";
                        }
                    }
                }

                table = table + "</table>";
                $("#progress_table").html(table);

                for(var i = 0; i < result.length; i++){
                    var statusStyle;
                    var event = result[i];
                    if(event.name === "Status" && event.status == "success"){
                        setTimeout(redirectAppHome, 2000);
                        function redirectAppHome(){
                            window.location.replace("home.jag?applicationKey=" + applicationHashId);
                        }
                    } else if(event.status == "failed"){
                        var alert = "<p>Application creation failed. </p><p>Reason: " + event.description + "</p>";
                        var retry_button = "<button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onclick=\"redirectAppListing();\">cancel</button>" +
                                           "<button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onclick=\"retryAppCreation();\">Back to Application Creation</button>";
                        setTimeout(showErrorPopup, 2000);
                        function showErrorPopup(){
                            $("#app-creation-model-body").html(alert);
                            $("#app-creation-model-footer").html(retry_button);
                        }
                    }
                }
            },function (jqXHR, textStatus, errorThrown) {
                 var alert = "<p>Application creation failed. " + errorThrown + "</p>";
                 var retry_button = "<button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onclick=\"redirectAppListing();\">Cancel</button>" +
                                    "<button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onclick=\"retryAppCreation();\">Back to Application Creation</button>";
                 setTimeout(showErrorPopup, 1000);
                 function showErrorPopup(){
                     $("#app-creation-model-body").html(alert);
                     $("#app-creation-model-footer").html(retry_button);
                 }
            });
        }



        /*** application form validation ***/

         // Classes to be added to parent div of the validated element
        var errorFormGroupClasses = "has-error";        // if validation is failed
        var successFormGroupClasses = "has-success";    // if validation is successful
        var feedBack = "has-feedback";

        // Setting validation options
        // More info: http://jqueryvalidation.org/validate#validate-options


        var creationFormValidationOpts = {
            rules: {                                        // validation rules
                applicationName: {                          // applicationName filed
                    required: true,
                    validateContent: true,
                    validateApplicationNameChar: true
                },
                applicationRevision: {
                    required: true,
                    validateContent: true,
                    validationApplicationRevisionChar: true
                },
                icon: {                                     // app icon field
                    validateAppIcon: true
                },
                uploadedFileName: {
                    validateArtifact: true
                },
                runtime: {
                    validateRuntimeSelection: true
                }
            },
            onsubmit: false,    // Since we are handling on submit validation on click event of the "Create" button,
            onfocusout: function (element, event) {
                var validator = $("#application-details").validate();
                validator.element(element);
                return false;
            },                            // here we disabled the form validation on submit
            highlight: function (element, errorClass, validClass) { // this is triggered when the "element" is invalid
            },
            unhighlight: function (element, errorClass, validClass) { // this is triggered when the "element" is valid
            },
            showErrors: function (event, validator) {
                // Disable app creation button if the form is not valid
                if (this.numberOfInvalids() > 0) {
                    $("#add-application").prop("disabled", true);
                    if(Object.keys(event)[0] != "uploadedFileName"){
                        $("#btn-artifact-upload").attr("disabled", true);
                    }
                    $("#url-upload").attr("disabled", true);
                } else {
                    activateCreateApplication();
                }
                this.defaultShowErrors();
            },
            errorPlacement: function (error, element) {
                if ($(element).parent().closest('div').hasClass("input-group")) {
                    error.insertAfter($(element).closest('div'));
                } else {
                    error.insertAfter(element);
                }
            }
        };

        // Register createAppForm with above options for validation
        $("#application-details").validate(creationFormValidationOpts);

        //Initially the create button is disabled
        $("#add-application").prop("disabled", true);

        $.validator.addMethod("validateContent", validateContent, getContentInvalidErrorMsg);
        $.validator.addMethod("validateAppIcon", validateAppIcon, getIconErrorMessage);
        $.validator.addMethod("validateApplicationNameChar", validateApplicationNameChar, getValidationFailErrorMsg);
        $.validator.addMethod("validationApplicationRevisionChar", validationApplicationRevisionChar, getValidationFailErrorMsg);
        $.validator.addMethod("validateRuntimeSelection", validateRuntimeSelection, "Please select a valid runtime");
        $.validator.addMethod("validateArtifact", validateArtifact, getArtifactErrorMessage);

        $("#appIcon").change(function() {
             $("#icon").val($("#appIcon").val());

             // validate the app icon upon changes
             var validator = $( "#application-details" ).validate();
             validator.element( "#icon" );
         });

        // Validate Icon
        $("#icon").change(function() {
             var file = $('#icon');
             validateIconImage(file.val(), this.files[0].size);
        });

        $('.radio-inline input:radio').click(function() {

            var selection = $(this);
            if(selection.val() == 'upload-from-file'){
                $('#file-upload-block').fadeIn();
                $('#url-upload-block').hide();
                $('#github-block').hide();
                uploadMethod = "file";
            }else if(selection.val() == 'upload-from-url'){
                $('#file-upload-block').hide();
                $('#github-block').hide();
                $('#url-upload-block').fadeIn();
                uploadMethod = "url";
            }else if(selection.val() == 'github-repo-url'){
                $('#file-upload-block').hide();
                $('#url-upload-block').hide();
                $('#github-block').fadeIn();
                uploadMethod = "github";
            }
        });

        function validateApplicationNameChar(value) {
            var patternNonAlphaNumExceptHyphen = /[^\w -]/g;
            var isPatternMatch = patternNonAlphaNumExceptHyphen.test(value);
            validationFailErrorMsg = "Application Name has invalid characters. Valid characters are a-z A-Z 0-9 -";

            return !isPatternMatch;
        }

        function validationApplicationRevisionChar(value) {
            var patternNonAlphaNum = /^(?:(\d{1,2})\.)?(?:(\d{1,2})\.)?(\*|\d{1,2})$/g;
            var isPatternMatch = patternNonAlphaNum.test(value);
            validationFailErrorMsg = "Invalid version number - Provide version number in format major.minor.patch";

            return isPatternMatch;
        }

        function validateRuntimeSelection(value){
            return (value > 0 ) ? true : false;
        }

        function validateContent(value, element) {
            var isValueValid = true;
            var valueLength = (value).length;
            if (valueLength == 0) {
                contentInvalidErrorMsg = "Empty values are not allowed for " + $(element).attr("name");
                isValueValid = false;
            } else if (!isNaN(value)) {
                contentInvalidErrorMsg = "Non-alphanumeric characters are not allowed for " + $(element).attr("name");
                isValueValid = false;
            }
            return isValueValid;
        }

        function getContentInvalidErrorMsg(){
           return contentInvalidErrorMsg;
        }

        function getValidationFailErrorMsg(){
           return validationFailErrorMsg;
        }
        /** end application creation form validations */

        $('#url-upload').click(function(){
            $("#url-upload-progress").html("<i class=\"fa fa-circle-o-notch fa-spin\"></i>");
            jagg.post("../blocks/application/application.jag", {
                action:"downloadFromUrl",
                artfactUrl:$("#artifactUrl").val(),
                applicationName:$("#applicationName").val(),
                applicationRevision:$("#applicationRevision").val(),
                appTypeName:appTypeName
            },function (result) {
                $("#url-upload-progress").html("<i class=\"fa fa-check\"></i>");
                urlUploadComplete = true;
                activateCreateApplication();
            },function (jqXHR, textStatus, errorThrown) {
                jagg.message({content: "Error occurred while downloading artifact from url.", type: 'error', id:'view_log'});
            });
        });

        var createNewAppForm = $("#applicationName");
        createNewAppForm.on('focusout ', function () {
            checkApplicationExistence();
        });

        var appNameField = $("#application-details");
                createNewAppForm.on('focusout keyup blur click', function () { // fires on every keyup & blur
                    activateCreateApplication();
                    activateUploadButton();
        });
    });

    function activateCreateApplication() {
        if ($('#applicationName').val() && $('#applicationRevision').val() 
                        && $('#runtime').val() > 0 && ($("#uploadedFileName").val() || $("#artifactUrl").val() || ($("#gitRepoUrl").val()  && $("#gitRepoBranch").val()))) {// checks form for validity

            if($("#uploadedFileName").val()){
                if(validateArtifactType($("#uploadedFileName").val())){
                    $("#add-application").prop("disabled", false);
                }else{
                    $("#add-application").prop("disabled", true);
                }
            }else if ($("#artifactUrl").val()){
                if(urlUploadComplete){
                    $("#add-application").prop("disabled", false);
                } else {
                    $("#add-application").prop("disabled", true);
                }
            }else if($("#gitRepoUrl").val()  && $("#gitRepoBranch").val()){
		        $("#add-application").prop("disabled", false);
            }
        } else {
            $("#add-application").prop("disabled", true);      // enables button
        }
    }


    function activateUploadButton() {
        if ($('#applicationName').val() && $('#applicationRevision').val()) {
            $("#btn-artifact-upload").attr("disabled", false);
            $("#url-upload").attr("disabled", false);
        }
    }

    function checkApplicationExistence(){
        jagg.post("../blocks/application/application.jag", {
            action:"getApplicationHashIdByName",
            applicationName:$("#applicationName").val()
        },function (result) {
            if (JSON.parse(result) !== null ) {
                jagg.popMessage({type:'confirm', modalStatus: true, title:'Delete Tag',content:'Application with name: '
                    + $("#applicationName").val() + ' already exists. Do you want to go to the existing application?',
                    okCallback:function(){
                        window.location.replace("home.jag?applicationKey=" + result);
                    }, cancelCallback:function(){
                        location.reload();
                    }
                });
            }
        },function (jqXHR, textStatus, errorThrown) {
            jagg.message({content: "Error occurred while checking application existence.", type: 'error', id:'view_log'});


        });
    }

     function clearUploadIconField() {
         document.getElementById("icon").value = "";
         document.getElementById("appIcon").value = "";
         var validator = $( "#application-details" ).validate();
         validator.element( "#icon" );
     }

    // Return whether the app icon is validated or not
    function validateAppIcon(value) {
        var file = $("#appIcon");
        if ($("#icon").val() && file.val() != "") {
            return validateIconImage(file.val(), file[0].files[0].size);
        } else {
            return true;
        }
    }

    // Return whether the artifact is validated or not
    function validateArtifact(value) {
        var file = $("#uploadedFileName");
        if (file.val() != "") {
            return validateArtifactType(file.val());
        } else {
            return true;
        }
    }

    function validateIconImage(filename, fileSize) {

         var ext = getFileExtension(filename);
         var maxSize = 5242880;
         var isValidExtension = false;
         var isValidIconSize = false;

         // Check extension
         switch (ext.toLowerCase()) {
             case 'jpg':
             case 'jpeg':
             case 'gif':
             case 'bmp':
             case 'png':
                 isValidExtension = true;
                 break;
             default:
                 iconErrorMsg = "Invalid image selected for Application Icon - Select a valid image";
                 isValidExtension = false;
                 break;
         }
         // Check size
         if(!fileSize) {
            iconErrorMsg = "Image file should be non-empty";
            isValidIconSize = false;
         } else if (fileSize != undefined && fileSize > maxSize) {
            iconErrorMsg ="Image file should be less than 5MB";
            isValidIconSize = false;
         } else {
             isValidIconSize = true;
         }
         return (isValidExtension && isValidIconSize);
    }

    function validateArtifactType(filename) {
         var ext = getFileExtension(filename);
         var isValidExtension = false;

         if(ext.toLowerCase() === APP_TYPE_EXTENSION){
            isValidExtension = true;
         } else {
            artifactErrorMsg= "Invalid artifact selected for Application - Select a valid artifact";
            isValidExtension = false;
         }

         return (isValidExtension);
    }

    // Utility Functions Goes Here
    // extract file extension
    function getFileExtension(filename) {
        var parts = filename.split('.');
        return parts[parts.length - 1];
    }

    function getIconErrorMessage(){
        return iconErrorMsg;
    }

    function getArtifactErrorMessage(){
        return artifactErrorMsg;
    }

    function redirectAppListing() {
        window.location.replace("index.jag");
    }

    function retryAppCreation() {
        $('#add-application').loadingButton({action:'hide'});
    }

    function goBack() {
        window.history.back();
    }
 </script>

    <!-- BOF App factory menu actionbar -->
        <div class="action-bar">

        <%
        if(newVersion){
        %>
            <a onclick="goBack();" class="btn-action">
                <span class="fw-stack fw-lg btn-action-ico">
                    <i class="fw fw-circle-outline fw-stack-2x"></i>
                    <i class="fw fw-left-arrow fw-stack-1x"></i>
                </span> Back to App Home
            </a>
        <%
        } else {
        %>
            <a href="<%=jagg.getAbsoluteUrl("/site/pages/select-apptype.jag")%>" class="btn-action">
                <span class="fw-stack fw-lg btn-action-ico">
                    <i class="fw fw-circle-outline fw-stack-2x"></i>
                    <i class="fw fw-left-arrow fw-stack-1x"></i>
                </span> Back to app type selection
            </a>
            <a href="<%=jagg.getAbsoluteUrl("/site/pages/index.jag")%>" class="btn-action">
                <span class="fw-stack fw-lg btn-action-ico">
                    <i class="fw fw-circle-outline fw-stack-2x"></i>
                    <i class="fa fa-mail-reply-all fa-stack-1x"></i>
                </span> Cancel
            </a>
        <%
        }
        %>
    </div>
<!-- EOF App Cloud menu actionbar-->

<div class="container-fluid cloud-container">
        <div class="row">
            <div class="col-fixed-left col-fixed-1x">
                <div class="cloud-selected-app-type <%= appType.color%>" id="1">
                    <i class="fw <%= appType.icon%> fw-4x"></i>
                </div>
            </div>
            <div class="col-md-6">
                <div class="cloud-selected-app-type-name">
                    <h1><%= appType.displayName%></h1>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5 forms">

      <form id="application-details" method="post" action='<%=jagg.getAbsoluteUrl("/site/blocks/application/application.jag")%>' enctype="multipart/form-data">
            <div class="form-group">
                <label for="application-name">Application Name: </label>
                <input id="applicationName" name="applicationName" type="text" class="form-control" placeholder="Enter Application Name" />
            </div>

        <% if(newVersion){ %>
            <div class="form-group">
            <label for="application-version">Application Version:
                <i class="fa fa-question-circle help-tips" data-toggle="tooltip" data-placement="left" title="Set the version in the form of <Major>.<Minor>.<Patch>"></i>
            </label>
            <input id="applicationRevision" name="applicationRevision" type="text" class="form-control" value="<%=nextVersion%>"/>
            </div>
        <% } else { %>
            <div class="form-group">
            <label for="application-version">Application Version:
                <i class="fa fa-question-circle help-tips" data-toggle="tooltip" data-placement="left" title="Set the version in the form of <Major>.<Minor>.<Patch>"></i>
            </label>
            <input id="applicationRevision" name="applicationRevision" type="text" class="form-control" value="1.0.0"/>
            </div>
        <% } %>
            <div class="form-group">
            <label for="application-description" >Description:
                <i class="fa fa-question-circle help-tips" data-toggle="tooltip" data-placement="left" title="Supported upto 1000 characters"></i>
            </label>
            <textarea name="applicationDescription" class="form-control" rows="3" placeholder="Application description goes here. (Optional)"></textarea>
            </div>

            <!--div class="form-group">
            <label>No Of Replicas: </label>
            <select name="replicas" id="replicas" class="form-control">
                <option value="None" selected="Selected">Select replicas</option>
                <option value="1" >1</option>
            </select>
            </div-->

            <div class="form-group col-md-12">
                <label class="radio-inline">
                    <input type="radio" name="inlineRadioOptions" id="inlineRadio1" value="upload-from-file"
                           checked="checked" class="custom-radio"> Upload from file system
                </label>
                <label class="radio-inline">
                    <input type="radio" name="inlineRadioOptions" id="inlineRadio2" value="upload-from-url"
                           class="custom-radio"> Upload from URL
                </label>
                <%  if(isAppTypeBuildable == 'false'){ %>
                    <label class="radio-inline">
                        <input type="radio" name="inlineRadioOptions" id="inlineRadio3" value="github-repo-url"
                               class="custom-radio"> Connect to GitHub repo
                    </label>
                <% } %>
            </div>

            <div class="form-group" id="file-upload-block">
                <div class="input-group">
                    <input id="uploadedFileName" name="uploadedFileName" type="text" class="form-control" readonly>
                    <span class="input-group-btn">
                       <span class="btn btn-primary btn-file" id="btn-artifact-upload" disabled>
                           <input id="fileupload" type="file" name="fileupload">Browse
                       </span>
                    </span>
                </div>
                <div id="progress" class="progress">
                    <div class="progress-bar progress-bar-success" style="width: 0%;"></div>
                </div>
            </div>

            <div class="form-group" id="url-upload-block">
                <div class="input-group">
                    <input id="artifactUrl" name="artifactUrl" type="text" class="form-control" placeholder="Enter artifact URL" />
                    <span class="input-group-btn">
                        <a class="btn btn-primary" id="url-upload" type="button" disabled>Upload from URL
                        <span id="url-upload-progress"><span></a>
                    </span>
                </div>
            </div>

            <div class="form-group" id="github-block">
                <div class="input-group">
                     <span class="input-group-addon">URL</span>
                    <input id="gitRepoUrl" name="gitRepoUrl" type="text" class="form-control" placeholder="Enter GitHub Repository URL" />
                </div>
                <br/>
                <div class="input-group">
                    <span class="input-group-addon">Branch</span>
                    <input id="gitRepoBranch" name="gitRepoBranch" type="text" class="form-control" placeholder="Enter GitHub Repository branch" />
                </div>
                <br/>
                <div class="input-group">
                    <span class="input-group-addon">Project Root</span>
                    <input id="projectRoot" name="projectRoot" type="text" class="form-control" placeholder="Project Root" />
                </div>
                <br/>
                <!--div class="input-group">
                    <span class="input-group-addon">Token</span>
                    <input id="token" name="token" type="text" class="form-control" placeholder="Enter Personal access token" />
                </div-->
            </div>

            <div class="form-group">
                <label for="runtime">Runtime:
                    <i class="fa fa-question-circle help-tips" data-toggle="tooltip" data-placement="left" title="Select an appropriate runtime to run your application"></i>
                </label>
                <select name="runtime" id="runtime" class="form-control"></select>
            </div>

            <div class="form-group">
                <label for="application-icon">Icon:
                    <i class="fa fa-question-circle help-tips" data-toggle="tooltip" data-placement="left"
                title="Recommended image size : 300 x 300 pixels, file size 70 k (maximum)"></i>
                </label>
                <div class="input-group">
                    <input type="text" id="icon" name="icon" class="form-control" readonly>
                    <span class="input-group-btn">
                        <span class="btn btn-primary btn-file">
                            Browse <input type="file" id="appIcon" name="appIcon"/>
                        </span>
                        <span class="btn btn-primary btn-file" onclick="clearUploadIconField()" id="clear">
                            Clear
                        </span>
                    </span>
                </div>
            </div>

            <div class="panel-group property-accordion" id="property-accordion">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapseOne">
                                    Env Variables
                                    <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                                </a>
                            </h4>
                        </div>
                        <div id="collapseOne" class="panel-collapse collapse in">
                            <div class="panel-body" id="env-pane">
                                <div class="form-inline property-seperator">
                                    <div class="form-group">
                                        <label class="sr-only" for="key">Key</label>
                                        <input type="text" class="form-control element-add-key" placeholder="Key">
                                    </div>
                                    <div class="form-group">
                                        <label class="sr-only" for="value">Value</label>
                                        <input type="text" class="form-control element-add-value" placeholder="Value">
                                    </div>
                                    <div class="form-group">
                                        <button class="btn btn-primary btn-primary-add btn-primary-add-val" disabled>Add</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapseTwo">
                                    Tags
                                    <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-down"></i></span>
                                </a>

                            </h4>
                        </div>
                        <div id="collapseTwo" class="panel-collapse collapse">
                            <div class="panel-body " id="tags-pane">
                                <div class="form-inline property-seperator">
                                    <div class="form-group">
                                        <label class="sr-only" for="key">Key</label>
                                        <input type="text" class="form-control element-add-key" placeholder="Key">
                                    </div>
                                    <div class="form-group">
                                        <label class="sr-only" for="value">Value</label>
                                        <input type="text" class="form-control element-add-value" placeholder="Value">
                                    </div>
                                    <div class="form-group">
                                        <button class="btn btn-primary btn-primary-add btn-primary-add-val" disabled>Add</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
            </div>
            <div class="form-group">
                <button class="cu-btn cu-btn-sm cu-btn-blue cu-btn-position" id="add-application">
                    <span class="fw-stack fw-lg btn-action-ico">
                        <i class="fw fw-circle-outline fw-stack-2x"></i>
                        <i class="fw fw-add fw-stack-1x"></i>
                    </span>
                        Create
                </button>
            </div>
        </form>
        </div>
        </div>
      </div><!-- /.container -->

      <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/vendor/jquery.ui.widget.js'))%>"></script>
      <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/jquery.fileupload.js'))%>"></script>
      <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/jquery.iframe-transport.js'))%>"></script>
      <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/jQueryValidationPlugin-1.14.0/jquery.validate.min.js'))%>"></script>
      <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/jQueryValidationPlugin-1.14.0/additional-methods.min.js'))%>"></script>
    <!-- --------------------------------------- Overlay ----------------------------------------- -->
    <div class="modal fade build-logs-modal" id="app_creation_progress_modal">
        <div class="modal-dialog modal-dialog-margin-top-md ">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="modal-title">Application Creation Progress</h4>
                </div>
                <div class="modal-body" id="app-creation-model-body">
                </div>
                <div class="modal-body" id="app-creation-model-footer"></div>
            </div><!-- /.modal-content -->
        </div>
     </div><!-- /.modal -->

      <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/custom/custom.js'))%>"></script>
      <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('templates/application/js/application.js'))%>"></script>
    <%
}); %>
